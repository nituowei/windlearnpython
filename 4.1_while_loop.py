# python 中的 while 循环

#范例 1
# name = input("请输入你的名字:")
# if name == "":  #如果输入的名字是空字符串
#     print("你没有输入名字")
# else:
#     print(f"你好，{name}！")

# 范例 2 
# # 如果用 while 循环来代替上面的情况, 如果输入的是空就持续让用户输入名字.
# name = input("请输入你的名字:")
# while name == "":  #如果输入的名字是空字符串
#     name = input("你没有输入名字，请重新输入你的名字:")
# print(f"你好，{name}！")  #如果输入的名字不是空字符串，就打印出问候语
# # 这里的 while 循环会持续检查 name 是否为空字符串，如果是，就会要求用户重新输入名字，直到用户输入一个非空字符串为止。

# 这种方式可以确保用户输入一个有效的名字, 但是很啰嗦, 因为第一步显得多余了
# 直接在定义的时候给 name一个空值,让其直接进入while循环就可以了.

# name = ""  #先定义一个空字符串
# while name == "":  #如果输入的名字是空字符串
#     name = input("请输入你的名字:")
# print(f"你好，{name}！")  #如果输入的名字不是空字符串，就打印出问候语
# # 这种方式可以确保用户输入一个有效的名字, 而且不啰嗦.


# 范例 3
# 这里通过 while 循环来确保输入者输入的是我们要求输入的内容.
# 加入 try和 except 来处理输入错误的情况.

num = int(input("请输入一个 0-9 之间的数字:"))
while True:
    try:
        while num < 0 or num > 9:
            num = int(input("输入错误，请重新输入一个 0-9 之间的数字:"))
        print(f"你输入的数字是: {num}")
        break  # 如果输入有效，跳出循环, 这很重要.
    except ValueError:
        print("输入无效，请输入一个整数。")


# while num < 0 or num > 9:
#     num = int(input("输入错误，请重新输入一个 0-9 之间的数字:"))
# print(f"你输入的数字是: {num}")
# # # 这里的 while 循环会持续检查 num 是否在 0-9 之间，如果不是，就会要求用户重新输入数字，直到用户输入一个有效的数字为止。